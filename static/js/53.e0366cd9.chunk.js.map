{"version":3,"file":"static/js/53.e0366cd9.chunk.js","mappings":"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","sources":["entities/CarouselCard/ui/CarouselCard.tsx","features/arrows/ui/Arrows.tsx","webpack://react_movie/./src/features/carousel/ui/Carousel.module.scss?64d6","webpack://react_movie/./src/shared/ui/skeletonCard/CarouselSkeleton.module.scss?ec77","shared/ui/skeletonCard/CarouselSkeleton.tsx","features/carousel/ui/Carousel.tsx","webpack://react_movie/./src/widgets/searchContent/ui/SearchContent.module.scss?c177","webpack://react_movie/./src/widgets/banner/ui/Banner.module.scss?fcde","widgets/banner/ui/Banner.tsx","webpack://react_movie/./src/features/searchQuery/ui/SearchQuery.module.scss?ff7d","webpack://react_movie/./src/shared/ui/button/Button.module.scss?7742","shared/ui/button/Button.tsx","features/searchQuery/ui/SearchQuery.tsx","widgets/searchContent/ui/SearchContent.tsx","webpack://react_movie/./src/widgets/trending/ui/Trending.module.scss?1f3f","webpack://react_movie/./src/shared/ui/switchTabs/SwitchTabs.module.scss?542c","shared/ui/switchTabs/SwitchTabs.tsx","widgets/trending/ui/Trending.tsx","webpack://react_movie/./src/widgets/popular/ui/Popular.module.scss?32e4","widgets/popular/ui/Popular.tsx","webpack://react_movie/./src/widgets/rated/ui/Rated.module.scss?b171","widgets/rated/ui/Rated.tsx","pages/mainPage/ui/MainPage.tsx","shared/ui/Image/Img.tsx","shared/ui/circleRating/CircleRating.tsx","shared/ui/genres/Genres.tsx"],"sourcesContent":["import { FunctionComponent } from 'react';\r\nimport './CarouselCard.scss';\r\nimport Img from 'shared/ui/Image/Img';\r\nimport CircleRating from 'shared/ui/circleRating/CircleRating';\r\nimport Genres from 'shared/ui/genres/Genres';\r\nimport dayjs from 'dayjs';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { IRequestResults } from 'shared/types/typeOfResultRequest/typeOfResultRequest';\r\n\r\ninterface CarouselCardProps {\r\n    item: IRequestResults,\r\n    posterUrl: string,\r\n    endpoint?: string,\r\n    fullInfo?: boolean\r\n    className?: string\r\n    mediaType?: 'tv' | 'movie'\r\n}\r\n\r\nconst CarouselCard: FunctionComponent<CarouselCardProps> = ({ item, posterUrl, endpoint, fullInfo = true, className = '', mediaType }) => {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <div\r\n            className={`CarouselCard ${className}`}\r\n            onClick={() => navigate(`/${item.media_type || endpoint || mediaType}/${item.id}`)}\r\n        >\r\n            <div className=\"posterBlock\">\r\n                <Img src={posterUrl}/>\r\n                {fullInfo && (<>\r\n                    <CircleRating rating={Number(item.vote_average?.toFixed(1))}/>\r\n                    <Genres genresProps={item.genre_ids?.slice(0, 2)}/>\r\n                </>)}\r\n            </div>\r\n            <div className=\"descriptionCard\">\r\n                <span className=\"title\">\r\n                    {item.title || item.name}\r\n                </span>\r\n                <span className=\"date\">\r\n                    {dayjs(item.release_date || item.first_air_date).format(\r\n                        'MMM D, YYYY',\r\n                    )}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CarouselCard;\r\n","import { FunctionComponent } from 'react';\r\nimport './Arrows.scss';\r\nimport { BsFillArrowLeftCircleFill, BsFillArrowRightCircleFill } from 'react-icons/bs';\r\n\r\ninterface ArrowsProps {\r\n    changeContentCarousel: (dir: string) => void;\r\n}\r\n\r\nconst Arrows: FunctionComponent<ArrowsProps> = ({ changeContentCarousel }) => {\r\n\r\n    return (\r\n        <>\r\n            <BsFillArrowLeftCircleFill\r\n                className=\"carouselLeftNav arrow\"\r\n                onClick={() => changeContentCarousel('left')}\r\n            />\r\n            <BsFillArrowRightCircleFill\r\n                className=\"carouselRightNav arrow\"\r\n                onClick={() => changeContentCarousel('right')}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Arrows;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Carousel\":\"Carousel_Carousel__Ew+Xe\",\"carouselTitle\":\"Carousel_carouselTitle__1vOmB\",\"carouselItems\":\"Carousel_carouselItems__KyFDI\"};","// extracted by mini-css-extract-plugin\nexport default {\"carouselSkeleton\":\"CarouselSkeleton_carouselSkeleton__R7W5G\",\"SkeletonCard\":\"CarouselSkeleton_SkeletonCard__PXNSf\",\"posterBlock\":\"CarouselSkeleton_posterBlock__sro65\",\"textBlock\":\"CarouselSkeleton_textBlock__gd-Y4\",\"title\":\"CarouselSkeleton_title__29TDl\",\"date\":\"CarouselSkeleton_date__-xi-n\"};","import { FunctionComponent } from 'react';\r\nimport cls from './CarouselSkeleton.module.scss';\r\n\r\nconst CarouselSkeleton: FunctionComponent = () => {\r\n\r\n    const Skeleton = () => {\r\n        return (\r\n            <div className={cls.SkeletonCard}>\r\n                <div className={`${cls.posterBlock} skeleton`}></div>\r\n                <div className={cls.textBlock}>\r\n                    <div className={`${cls.title} skeleton`}></div>\r\n                    <div className={`${cls.date} skeleton`}></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={cls.carouselSkeleton}>\r\n            {Skeleton()}\r\n            {Skeleton()}\r\n            {Skeleton()}\r\n            {Skeleton()}\r\n            {Skeleton()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CarouselSkeleton;\r\n","import { FunctionComponent, useRef } from 'react';\r\nimport { IRequestResults } from 'shared/types/typeOfResultRequest/typeOfResultRequest';\r\nimport PosterFallback from 'shared/assets/images/no-poster.png';\r\nimport { useAppSelector } from 'app/providers/storeProviders/utils/hooks';\r\nimport { CarouselCard } from 'entities/CarouselCard';\r\nimport { Arrows } from '../../arrows';\r\nimport cls from './Carousel.module.scss';\r\nimport ContentWrapper from 'shared/ui/contentWrapper/ContentWrapper';\r\nimport CarouselSkeleton from 'shared/ui/skeletonCard/CarouselSkeleton';\r\n\r\ninterface CarouselProps {\r\n    results: Array<IRequestResults>;\r\n    isLoading: boolean;\r\n    endpoint?: string;\r\n    title?: string;\r\n}\r\n\r\nconst Carousel: FunctionComponent<CarouselProps> = ({ results, isLoading, endpoint, title }) => {\r\n    const carouselContainer = useRef<HTMLDivElement>(null);\r\n    const url: string = useAppSelector(state => state.config.url_images);\r\n\r\n    const changeContentCarousel = (dir: string) => {\r\n        const container = carouselContainer.current;\r\n        if (container) {\r\n            const scrollAmount =\r\n                dir === 'left'\r\n                    ? container.scrollLeft - (container.offsetWidth + 20)\r\n                    : container.scrollLeft + (container.offsetWidth + 20);\r\n\r\n            container.scrollTo({\r\n                left: scrollAmount,\r\n                behavior: 'smooth',\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={cls.Carousel}>\r\n            {title &&\r\n                <ContentWrapper className=\"ContentWrapperCarousel\">\r\n                    <div className={cls.carouselTitle}>{title}</div>\r\n                </ContentWrapper>\r\n            }\r\n            <ContentWrapper className=\"ContentWrapperCarousel\">\r\n                {Boolean(results) && <Arrows changeContentCarousel={changeContentCarousel}/>}\r\n                {!isLoading ?\r\n                    (\r\n                        <div className={cls.carouselItems} ref={carouselContainer}>\r\n                            {\r\n                                results?.map(item => {\r\n                                    const posterUrl = item.poster_path ? url + item.poster_path : PosterFallback;\r\n                                    return <CarouselCard\r\n                                        key={item.id + item.poster_path}\r\n                                        item={item}\r\n                                        posterUrl={posterUrl}\r\n                                        endpoint={endpoint}\r\n                                    />;\r\n                                })\r\n                            }\r\n                        </div>\r\n                    ) :\r\n                    (\r\n                        <CarouselSkeleton/>\r\n                    )}\r\n            </ContentWrapper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Carousel;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"SearchContent\":\"SearchContent_SearchContent__Ea4lP\",\"opacityLayer\":\"SearchContent_opacityLayer__I7Y+n\",\"textContent\":\"SearchContent_textContent__BLTVd\",\"title\":\"SearchContent_title__37mGh\",\"subTitle\":\"SearchContent_subTitle__KFeMW\"};","// extracted by mini-css-extract-plugin\nexport default {\"Banner\":\"Banner_Banner__81Tbo\"};","import { FunctionComponent, useEffect, useState } from 'react';\r\nimport cls from './Banner.module.scss';\r\nimport { useAppDispatch, useAppSelector } from 'app/providers/storeProviders/utils/hooks';\r\nimport Img from 'shared/ui/Image/Img';\r\nimport { fetchUpcoming } from 'entities/upcoming/model/slice/upcomingSlice';\r\n\r\nconst Banner: FunctionComponent = () => {\r\n    const dispatch = useAppDispatch();\r\n    const [background, setBackground] = useState<string | undefined>('');\r\n    const url: string = useAppSelector(state => state.config.url_images);\r\n    const { results } = useAppSelector(state => state.upcoming);\r\n\r\n    useEffect(() => {\r\n        if (!results?.length) {\r\n            dispatch(fetchUpcoming());\r\n        } else {\r\n            const bg = url + results[Math.floor(Math.random() * 20)]?.backdrop_path;\r\n            setBackground(bg);\r\n        }\r\n    }, [url, results, dispatch]);\r\n\r\n    return (\r\n        <div className={cls.Banner}>\r\n            <Img src={background}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Banner;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"SearchQuery\":\"SearchQuery_SearchQuery__Xn4gR\"};","// extracted by mini-css-extract-plugin\nexport default {\"searchButton\":\"Button_searchButton__QYwQP\"};","import { ButtonHTMLAttributes, FunctionComponent } from 'react';\r\nimport cls from './Button.module.scss';\r\n\r\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n    className?: string;\r\n}\r\n\r\nconst Button: FunctionComponent<ButtonProps> = (props) => {\r\n    const {\r\n        className = '',\r\n        disabled = false,\r\n        children,\r\n        type = 'button',\r\n        ...otherProps\r\n\r\n    } = props;\r\n\r\n    return (\r\n        <button\r\n            className={cls[className]}\r\n            disabled={disabled}\r\n            type={type}\r\n            {...otherProps}\r\n        >\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import React, { FunctionComponent, useState } from 'react';\r\nimport cls from './SearchQuery.module.scss';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Input from 'shared/ui/input/Input';\r\nimport Button from 'shared/ui/button/Button';\r\n\r\ninterface SearchQueryProps {\r\n    className?: string;\r\n}\r\n\r\nconst SearchQuery: FunctionComponent<SearchQueryProps> = () => {\r\n    const navigate = useNavigate();\r\n    const [query, setQuery] = useState('');\r\n\r\n    const searchQueryHandler = (event: {\r\n        preventDefault: () => void\r\n    }): void => {\r\n        event.preventDefault();\r\n        if (query.trim().length > 0) {\r\n            navigate(`/search/${query.trim()}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={searchQueryHandler} className={cls.SearchQuery}>\r\n            <Input\r\n                type=\"text\"\r\n                className=\"searchInput\"\r\n                placeholder=\"Search for a movie or tv show....\"\r\n                onChange={(event) => setQuery(event.target.value)}\r\n                value={query}\r\n            />\r\n            <Button type={'submit'} className={'searchButton'}>\r\n                Search\r\n            </Button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SearchQuery;\r\n","import { FunctionComponent } from 'react';\r\nimport cls from './SearchContent.module.scss';\r\nimport { Banner } from '../../banner';\r\nimport { useAppSelector } from 'app/providers/storeProviders/utils/hooks';\r\nimport { SearchQuery } from 'features/searchQuery';\r\nimport ContentWrapper from 'shared/ui/contentWrapper/ContentWrapper';\r\n\r\nconst SearchContent: FunctionComponent = () => {\r\n    const isLoading: boolean = useAppSelector(state => state.upcoming.isLoading);\r\n\r\n    return (\r\n        <div className={cls.SearchContent}>\r\n            {!isLoading && <Banner/>}\r\n            <div className={cls.opacityLayer}></div>\r\n            <ContentWrapper>\r\n                <div className={cls.textContent}>\r\n                    <span className={cls.title}>Welcome.</span>\r\n                    <span className={cls.subTitle}>\r\n                        Millions of movies, TV shows and people to discover.Explore now.\r\n                    </span>\r\n                    <SearchQuery/>\r\n                </div>\r\n            </ContentWrapper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchContent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Trending\":\"Trending_Trending__w8LcT\",\"carouselTitle\":\"Trending_carouselTitle__nBiUg\"};","// extracted by mini-css-extract-plugin\nexport default {\"SwitchTabs\":\"SwitchTabs_SwitchTabs__Fnm-u\",\"switcher\":\"SwitchTabs_switcher__pXkuG\",\"switchEl\":\"SwitchTabs_switchEl__XXpsN\",\"switchElActive\":\"SwitchTabs_switchElActive__02ISz\",\"movingBg\":\"SwitchTabs_movingBg__846WR\"};","import { FunctionComponent, useState } from 'react';\r\nimport cls from './SwitchTabs.module.scss';\r\n\r\ninterface SwitchTabsProps {\r\n    text: string[];\r\n    onTabChange: (el: string) => void;\r\n}\r\n\r\nconst SwitchTabs: FunctionComponent<SwitchTabsProps> = (props) => {\r\n    const { text, onTabChange } = props;\r\n    const [selectedTab, setSelectedTab] = useState(0);\r\n    const [left, setLeft] = useState(0);\r\n\r\n    const activeTab = (el: string, idx: number): void => {\r\n        setLeft(idx * 100);\r\n        setTimeout(() => {\r\n            setSelectedTab(idx);\r\n        }, 300);\r\n        onTabChange(el);\r\n    };\r\n\r\n    return (\r\n        <div className={cls.SwitchTabs}>\r\n            <div className={cls.switcher}>\r\n                {\r\n                    text.map((el: string, idx: number) => (\r\n                        <span\r\n                            key={idx + el}\r\n                            className={selectedTab === idx ? cls.switchElActive : cls.switchEl}\r\n                            onClick={() => activeTab(el, idx)}\r\n                        >\r\n                            {el}\r\n                        </span>\r\n                    ))\r\n                }\r\n                <span className={cls.movingBg} style={{ left }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SwitchTabs;\r\n","import { FunctionComponent, useEffect } from 'react';\r\nimport cls from './Trending.module.scss';\r\nimport { useAppDispatch, useAppSelector } from 'app/providers/storeProviders/utils/hooks';\r\nimport { changeEndpointTrending, fetchTrending } from 'entities/trending/model/slice/trendingSlice';\r\nimport { Carousel } from 'features/carousel';\r\nimport ContentWrapper from 'shared/ui/contentWrapper/ContentWrapper';\r\nimport SwitchTabs from 'shared/ui/switchTabs/SwitchTabs';\r\n\r\nconst Trending: FunctionComponent = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { endpoint, results, isLoading } = useAppSelector(state => state.trending);\r\n\r\n    useEffect(() => {\r\n        if (!results[endpoint] && !isLoading) {\r\n            dispatch(fetchTrending(endpoint));\r\n        }\r\n    }, [endpoint, results]);\r\n    const onTabChange = (tab: string) => {\r\n        dispatch(changeEndpointTrending(tab === 'Day' ? 'day' : 'week'));\r\n    };\r\n    return (\r\n        <div className={cls.Trending}>\r\n            <ContentWrapper className=\"ContentWrapperTrending\">\r\n                <span className={cls.carouselTitle}>Trending</span>\r\n                <SwitchTabs text={['Day', 'Week']} onTabChange={onTabChange}/>\r\n            </ContentWrapper>\r\n            <Carousel results={results[endpoint]?.results} isLoading={isLoading}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Trending;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Popular\":\"Popular_Popular__Sm7ag\",\"carouselTitle\":\"Popular_carouselTitle__vu6FN\"};","import { FunctionComponent, useEffect } from 'react';\r\nimport cls from './Popular.module.scss';\r\nimport { useAppDispatch, useAppSelector } from 'app/providers/storeProviders/utils/hooks';\r\nimport { Carousel } from 'features/carousel';\r\nimport { changeEndpointPopular, fetchPopular } from 'entities/popular/model/slice/popularSlice';\r\nimport ContentWrapper from 'shared/ui/contentWrapper/ContentWrapper';\r\nimport SwitchTabs from 'shared/ui/switchTabs/SwitchTabs';\r\n\r\nconst Popular: FunctionComponent = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { endpoint, results, isLoading } = useAppSelector(state => state.popular);\r\n\r\n    useEffect(() => {\r\n        if (!results[endpoint] && !isLoading) {\r\n            dispatch(fetchPopular(endpoint));\r\n        }\r\n    }, [endpoint, results]);\r\n    const onTabChange = (tab: string) => {\r\n        dispatch(changeEndpointPopular(tab === 'Movies' ? 'movie' : 'tv'));\r\n    };\r\n    return (\r\n        <div className={cls.Popular}>\r\n            <ContentWrapper className=\"ContentWrapperTrending\">\r\n                <span className={cls.carouselTitle}>What's Popular</span>\r\n                <SwitchTabs text={['Movies', 'TV Shows']} onTabChange={onTabChange}/>\r\n            </ContentWrapper>\r\n            <Carousel results={results[endpoint]?.results} isLoading={isLoading} endpoint={endpoint}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Popular;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Rated\":\"Rated_Rated__o6G5l\",\"carouselTitle\":\"Rated_carouselTitle__-2maz\"};","import { FunctionComponent, useEffect } from 'react';\r\nimport cls from './Rated.module.scss';\r\nimport { useAppDispatch, useAppSelector } from 'app/providers/storeProviders/utils/hooks';\r\nimport { Carousel } from 'features/carousel';\r\nimport { changeEndpointRated, fetchRated } from 'entities/rated/model/slice/ratedSlice';\r\nimport ContentWrapper from 'shared/ui/contentWrapper/ContentWrapper';\r\nimport SwitchTabs from 'shared/ui/switchTabs/SwitchTabs';\r\n\r\nconst Rated: FunctionComponent = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { endpoint, results, isLoading } = useAppSelector(state => state.rated);\r\n\r\n    useEffect(() => {\r\n        if (!results[endpoint] && !isLoading) {\r\n            dispatch(fetchRated(endpoint));\r\n        }\r\n    }, [endpoint, results]);\r\n    const onTabChange = (tab: string) => {\r\n        dispatch(changeEndpointRated(tab === 'Movies' ? 'movie' : 'tv'));\r\n    };\r\n    return (\r\n        <div className={cls.Rated}>\r\n            <ContentWrapper className=\"ContentWrapperTrending\">\r\n                <span className={cls.carouselTitle}>Top Rated</span>\r\n                <SwitchTabs text={['Movies', 'TV Shows']} onTabChange={onTabChange}/>\r\n            </ContentWrapper>\r\n            <Carousel results={results[endpoint]?.results} isLoading={isLoading} endpoint={endpoint}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Rated;\r\n","import { FunctionComponent } from 'react';\r\nimport { SearchContent } from 'widgets/searchContent';\r\nimport { Trending } from 'widgets/trending';\r\nimport { Popular } from 'widgets/popular';\r\nimport { Rated } from 'widgets/rated';\r\n\r\nconst MainPage: FunctionComponent = () => {\r\n\r\n    return (\r\n        <div>\r\n            <SearchContent/>\r\n            <Trending/>\r\n            <Popular/>\r\n            <Rated/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n","import { FunctionComponent } from 'react';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport './Img.scss';\r\nimport PosterFallback from 'shared/assets/images/no-poster.png';\r\n\r\ninterface ImgProps {\r\n    src?: string;\r\n    className?: string;\r\n}\r\n\r\nconst Img: FunctionComponent<ImgProps> = ({ src, className = '' }) => {\r\n\r\n    return (\r\n        <LazyLoadImage\r\n            className={className}\r\n            alt=\"\"\r\n            effect=\"blur\"\r\n            placeholderSrc={PosterFallback}\r\n            src={src}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Img;\r\n","import { FunctionComponent } from 'react';\r\nimport './CircleRating.scss';\r\nimport { buildStyles, CircularProgressbar } from 'react-circular-progressbar';\r\n\r\ninterface CircleRatingProps {\r\n    rating: number;\r\n    className?: string;\r\n    textColor?: string;\r\n}\r\n\r\nconst CircleRating: FunctionComponent<CircleRatingProps> = ({ rating, className = '', textColor = '' }) => {\r\n\r\n    return (\r\n        <div className={`${className} CircleRating`}>\r\n            <CircularProgressbar\r\n                value={rating}\r\n                maxValue={10}\r\n                text={String(rating)}\r\n                styles={buildStyles({\r\n                    pathColor: rating < 5 ? 'red' : rating < 7 ? 'orange' : 'green',\r\n                    textColor: textColor ? textColor : '',\r\n                })}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CircleRating;\r\n","import { FunctionComponent } from 'react';\r\nimport './Genres.scss';\r\nimport { useAppSelector } from 'app/providers/storeProviders/utils/hooks';\r\n\r\ninterface GenresProps {\r\n    genresProps: number[];\r\n    className?: string;\r\n}\r\n\r\nconst Genres: FunctionComponent<GenresProps> = ({ genresProps, className = '' }) => {\r\n    const { genres } = useAppSelector(state => state.config);\r\n\r\n    return (\r\n        <div className={`${className} Genres`}>\r\n            {\r\n                genresProps?.map(g => {\r\n                    if (!genres[g]) return;\r\n                    return (\r\n                        <div key={g} className=\"genre\">\r\n                            {genres[g]}\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Genres;\r\n"],"names":["_ref","_item$vote_average","_item$genre_ids","item","posterUrl","endpoint","fullInfo","className","mediaType","navigate","useNavigate","_jsxs","concat","onClick","media_type","id","children","_jsx","Img","src","_Fragment","CircleRating","rating","Number","vote_average","toFixed","Genres","genresProps","genre_ids","slice","title","name","dayjs","release_date","first_air_date","format","changeContentCarousel","BsFillArrowLeftCircleFill","BsFillArrowRightCircleFill","CarouselSkeleton","Skeleton","cls","results","isLoading","carouselContainer","useRef","url","useAppSelector","state","config","url_images","ContentWrapper","Boolean","Arrows","dir","container","current","scrollAmount","scrollLeft","offsetWidth","scrollTo","left","behavior","ref","map","poster_path","PosterFallback","CarouselCard","Banner","dispatch","useAppDispatch","background","setBackground","useState","upcoming","useEffect","length","_results$Math$floor","bg","Math","floor","random","backdrop_path","fetchUpcoming","props","disabled","type","otherProps","SearchQuery","query","setQuery","onSubmit","event","preventDefault","trim","Input","placeholder","onChange","target","value","Button","SearchContent","text","onTabChange","selectedTab","setSelectedTab","setLeft","el","idx","activeTab","setTimeout","style","Trending","_results$endpoint","trending","fetchTrending","SwitchTabs","tab","changeEndpointTrending","Carousel","Popular","popular","fetchPopular","changeEndpointPopular","Rated","rated","fetchRated","changeEndpointRated","MainPage","LazyLoadImage","alt","effect","placeholderSrc","textColor","CircularProgressbar","maxValue","String","styles","buildStyles","pathColor","genres","g"],"sourceRoot":""}