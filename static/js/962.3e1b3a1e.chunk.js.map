{"version":3,"file":"static/js/962.3e1b3a1e.chunk.js","mappings":"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","sources":["entities/CarouselCard/ui/CarouselCard.tsx","features/arrows/ui/Arrows.tsx","webpack://react_movie/./src/features/carousel/ui/Carousel.module.scss?64d6","webpack://react_movie/./src/shared/ui/skeletonCard/CarouselSkeleton.module.scss?ec77","shared/ui/skeletonCard/CarouselSkeleton.tsx","features/carousel/ui/Carousel.tsx","webpack://react_movie/./src/widgets/contentPage/Videos/Videos.module.scss?8860","webpack://react_movie/./src/entities/contentPage/ui/videos/VideosSkeleton/VideosSkeleton.module.scss?9902","entities/contentPage/ui/videos/VideosSkeleton/VideosSkeleton.tsx","features/videoPopup/ui/VideoPopup.tsx","webpack://react_movie/./src/entities/contentPage/ui/detailsCast/CastSkeleton/CartSkeleton.module.scss?a6fc","entities/contentPage/ui/detailsCast/CastSkeleton/CartSkeleton.tsx","webpack://react_movie/./src/entities/contentPage/ui/detailsCast/CastCard/CastCard.module.scss?a671","entities/contentPage/ui/detailsCast/CastCard/CastCard.tsx","entities/contentPage/ui/detailsBanner/InfoWriters/InfoWriters.tsx","entities/contentPage/ui/detailsBanner/InfoDirectors/infoDirectors.tsx","shared/helpers/helpers.ts","entities/contentPage/ui/detailsBanner/InfoRelease/InfoRelease.tsx","webpack://react_movie/./src/entities/contentPage/ui/detailsBanner/Overview/OverView.module.scss?07fb","entities/contentPage/ui/detailsBanner/Overview/OverView.tsx","shared/ui/playIcon/PlayIcon.tsx","entities/contentPage/ui/detailsBanner/WatchTrailer/WatchTrailer.tsx","webpack://react_movie/./src/entities/contentPage/ui/detailsBanner/Titles/Titles.module.scss?b586","entities/contentPage/ui/detailsBanner/Titles/Titles.tsx","entities/contentPage/ui/detailsBanner/Poster/DetailsPoster.tsx","webpack://react_movie/./src/entities/contentPage/ui/detailsBanner/BannerSkeleton/DetailsBannerSkeleton.module.scss?fd8c","entities/contentPage/ui/detailsBanner/BannerSkeleton/DetailsBannerSkeleton.tsx","entities/contentPage/ui/detailsBanner/BackdropImg/DetailsBackdropImg.tsx","entities/contentPage/ui/videos/VideoCard/VideoCard.tsx","widgets/contentPage/Videos/Videos.tsx","widgets/contentPage/Similar/Similar.tsx","webpack://react_movie/./src/widgets/contentPage/detailsBanner/DetailsBanner.module.scss?8f18","widgets/contentPage/detailsBanner/DetailsBanner.tsx","webpack://react_movie/./src/widgets/contentPage/Cast/Cast.module.scss?439c","widgets/contentPage/Cast/Cast.tsx","pages/contentPage/ui/ContentPage.tsx","shared/ui/Image/Img.tsx","shared/ui/circleRating/CircleRating.tsx","shared/ui/genres/Genres.tsx"],"sourcesContent":["import { FunctionComponent } from 'react';\r\nimport './CarouselCard.scss';\r\nimport Img from 'shared/ui/Image/Img';\r\nimport CircleRating from 'shared/ui/circleRating/CircleRating';\r\nimport Genres from 'shared/ui/genres/Genres';\r\nimport dayjs from 'dayjs';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { IRequestResults } from 'shared/types/typeOfResultRequest/typeOfResultRequest';\r\n\r\ninterface CarouselCardProps {\r\n    item: IRequestResults,\r\n    posterUrl: string,\r\n    endpoint?: string,\r\n    fullInfo?: boolean\r\n    className?: string\r\n    mediaType?: 'tv' | 'movie'\r\n}\r\n\r\nconst CarouselCard: FunctionComponent<CarouselCardProps> = ({ item, posterUrl, endpoint, fullInfo = true, className = '', mediaType }) => {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <div\r\n            className={`CarouselCard ${className}`}\r\n            onClick={() => navigate(`/${item.media_type || endpoint || mediaType}/${item.id}`)}\r\n        >\r\n            <div className=\"posterBlock\">\r\n                <Img src={posterUrl}/>\r\n                {fullInfo && (<>\r\n                    <CircleRating rating={Number(item.vote_average?.toFixed(1))}/>\r\n                    <Genres genresProps={item.genre_ids?.slice(0, 2)}/>\r\n                </>)}\r\n            </div>\r\n            <div className=\"descriptionCard\">\r\n                <span className=\"title\">\r\n                    {item.title || item.name}\r\n                </span>\r\n                <span className=\"date\">\r\n                    {dayjs(item.release_date || item.first_air_date).format(\r\n                        'MMM D, YYYY',\r\n                    )}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CarouselCard;\r\n","import { FunctionComponent } from 'react';\r\nimport './Arrows.scss';\r\nimport { BsFillArrowLeftCircleFill, BsFillArrowRightCircleFill } from 'react-icons/bs';\r\n\r\ninterface ArrowsProps {\r\n    changeContentCarousel: (dir: string) => void;\r\n}\r\n\r\nconst Arrows: FunctionComponent<ArrowsProps> = ({ changeContentCarousel }) => {\r\n\r\n    return (\r\n        <>\r\n            <BsFillArrowLeftCircleFill\r\n                className=\"carouselLeftNav arrow\"\r\n                onClick={() => changeContentCarousel('left')}\r\n            />\r\n            <BsFillArrowRightCircleFill\r\n                className=\"carouselRightNav arrow\"\r\n                onClick={() => changeContentCarousel('right')}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Arrows;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Carousel\":\"Carousel_Carousel__Ew+Xe\",\"carouselTitle\":\"Carousel_carouselTitle__1vOmB\",\"carouselItems\":\"Carousel_carouselItems__KyFDI\"};","// extracted by mini-css-extract-plugin\nexport default {\"carouselSkeleton\":\"CarouselSkeleton_carouselSkeleton__R7W5G\",\"SkeletonCard\":\"CarouselSkeleton_SkeletonCard__PXNSf\",\"posterBlock\":\"CarouselSkeleton_posterBlock__sro65\",\"textBlock\":\"CarouselSkeleton_textBlock__gd-Y4\",\"title\":\"CarouselSkeleton_title__29TDl\",\"date\":\"CarouselSkeleton_date__-xi-n\"};","import { FunctionComponent } from 'react';\r\nimport cls from './CarouselSkeleton.module.scss';\r\n\r\nconst CarouselSkeleton: FunctionComponent = () => {\r\n\r\n    const Skeleton = () => {\r\n        return (\r\n            <div className={cls.SkeletonCard}>\r\n                <div className={`${cls.posterBlock} skeleton`}></div>\r\n                <div className={cls.textBlock}>\r\n                    <div className={`${cls.title} skeleton`}></div>\r\n                    <div className={`${cls.date} skeleton`}></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={cls.carouselSkeleton}>\r\n            {Skeleton()}\r\n            {Skeleton()}\r\n            {Skeleton()}\r\n            {Skeleton()}\r\n            {Skeleton()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CarouselSkeleton;\r\n","import { FunctionComponent, useRef } from 'react';\r\nimport { IRequestResults } from 'shared/types/typeOfResultRequest/typeOfResultRequest';\r\nimport PosterFallback from 'shared/assets/images/no-poster.png';\r\nimport { useAppSelector } from 'app/providers/storeProviders/utils/hooks';\r\nimport { CarouselCard } from 'entities/CarouselCard';\r\nimport { Arrows } from '../../arrows';\r\nimport cls from './Carousel.module.scss';\r\nimport ContentWrapper from 'shared/ui/contentWrapper/ContentWrapper';\r\nimport CarouselSkeleton from 'shared/ui/skeletonCard/CarouselSkeleton';\r\n\r\ninterface CarouselProps {\r\n    results: Array<IRequestResults>;\r\n    isLoading: boolean;\r\n    endpoint?: string;\r\n    title?: string;\r\n}\r\n\r\nconst Carousel: FunctionComponent<CarouselProps> = ({ results, isLoading, endpoint, title }) => {\r\n    const carouselContainer = useRef<HTMLDivElement>(null);\r\n    const url: string = useAppSelector(state => state.config.url_images);\r\n\r\n    const changeContentCarousel = (dir: string) => {\r\n        const container = carouselContainer.current;\r\n        if (container) {\r\n            const scrollAmount =\r\n                dir === 'left'\r\n                    ? container.scrollLeft - (container.offsetWidth + 20)\r\n                    : container.scrollLeft + (container.offsetWidth + 20);\r\n\r\n            container.scrollTo({\r\n                left: scrollAmount,\r\n                behavior: 'smooth',\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={cls.Carousel}>\r\n            {title &&\r\n                <ContentWrapper className=\"ContentWrapperCarousel\">\r\n                    <div className={cls.carouselTitle}>{title}</div>\r\n                </ContentWrapper>\r\n            }\r\n            <ContentWrapper className=\"ContentWrapperCarousel\">\r\n                {Boolean(results) && <Arrows changeContentCarousel={changeContentCarousel}/>}\r\n                {!isLoading ?\r\n                    (\r\n                        <div className={cls.carouselItems} ref={carouselContainer}>\r\n                            {\r\n                                results?.map(item => {\r\n                                    const posterUrl = item.poster_path ? url + item.poster_path : PosterFallback;\r\n                                    return <CarouselCard\r\n                                        key={item.id + item.poster_path}\r\n                                        item={item}\r\n                                        posterUrl={posterUrl}\r\n                                        endpoint={endpoint}\r\n                                    />;\r\n                                })\r\n                            }\r\n                        </div>\r\n                    ) :\r\n                    (\r\n                        <CarouselSkeleton/>\r\n                    )}\r\n            </ContentWrapper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Carousel;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Videos\":\"Videos_Videos__ElQzg\",\"title\":\"Videos_title__uQQ0v\",\"videosRow\":\"Videos_videosRow__UNe8Z\"};","// extracted by mini-css-extract-plugin\nexport default {\"VideosSkeleton\":\"VideosSkeleton_VideosSkeleton__DOOVz\",\"skItem\":\"VideosSkeleton_skItem__ol3sg\",\"thumb\":\"VideosSkeleton_thumb__Z8XdP\",\"row\":\"VideosSkeleton_row__gleeJ\",\"row2\":\"VideosSkeleton_row2__M3fBg\"};","import { FunctionComponent } from 'react';\r\nimport cls from './VideosSkeleton.module.scss';\r\n\r\ninterface VideosSkeletonProps {\r\n\r\n}\r\n\r\nconst VideosSkeleton: FunctionComponent<VideosSkeletonProps> = () => {\r\n\r\n    const Skeleton = () => {\r\n        return (\r\n            <div className={cls.skItem}>\r\n                <div className={`${cls.thumb} skeleton`}></div>\r\n                <div className={`${cls.row} skeleton`}></div>\r\n                <div className={`${cls.row2} skeleton`}></div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={cls.VideosSkeleton}>\r\n            {Skeleton()}\r\n            {Skeleton()}\r\n            {Skeleton()}\r\n            {Skeleton()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideosSkeleton;\r\n","import { Dispatch, FunctionComponent, SetStateAction } from 'react';\r\nimport './VideoPopup.scss';\r\nimport ReactPlayer from 'react-player';\r\n\r\ninterface VideoPopupProps {\r\n    show: boolean;\r\n    setShow: Dispatch<SetStateAction<boolean>>;\r\n    trailerId?: string;\r\n    setTrailerId: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\nconst VideoPopup: FunctionComponent<VideoPopupProps> = ({ show, setShow, trailerId, setTrailerId }) => {\r\n\r\n    const hidePopup = () => {\r\n        setShow(false);\r\n        setTrailerId('');\r\n    };\r\n\r\n    return (\r\n        <div className={`videoPopup ${show ? 'visible' : ''}`}>\r\n            <div className=\"opacityLayer\" onClick={hidePopup}></div>\r\n            <div className=\"videoPlayer\">\r\n                <span className=\"closeBtn\" onClick={hidePopup}>\r\n                    Close\r\n                </span>\r\n                <ReactPlayer\r\n                    url={`https://www.youtube.com/watch?v=${trailerId}`}\r\n                    controls\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoPopup;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"CartSkeleton\":\"CartSkeleton_CartSkeleton__A7w8P\",\"skItem\":\"CartSkeleton_skItem__FxqOh\",\"circle\":\"CartSkeleton_circle__hCOU3\",\"row\":\"CartSkeleton_row__0CyLL\",\"row2\":\"CartSkeleton_row2__SGTgl\"};","import { FunctionComponent } from 'react';\r\nimport cls from './CartSkeleton.module.scss';\r\n\r\nconst CartSkeleton: FunctionComponent = () => {\r\n\r\n    const Skeleton = () => {\r\n        return (\r\n            <div className={cls.skItem}>\r\n                <div className={`${cls.circle} skeleton`}></div>\r\n                <div className={`${cls.row} skeleton`}></div>\r\n                <div className={`${cls.row2} skeleton`}></div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={cls.CartSkeleton}>\r\n            {Skeleton()}\r\n            {Skeleton()}\r\n            {Skeleton()}\r\n            {Skeleton()}\r\n            {Skeleton()}\r\n            {Skeleton()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CartSkeleton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"CastCard\":\"CastCard_CastCard__FcC7s\",\"profileImg\":\"CastCard_profileImg__+aNfG\",\"name\":\"CastCard_name__aJXrf\",\"character\":\"CastCard_character__93b4v\"};","import { FunctionComponent } from 'react';\r\nimport cls from './CastCard.module.scss';\r\nimport Img from 'shared/ui/Image/Img';\r\nimport { ICastResults } from 'shared/types/typeOfResultRequest/typeOfResultRequest';\r\nimport Avatar from 'shared/assets/images/avatar.png';\r\nimport { useAppSelector } from 'app/providers/storeProviders/utils/hooks';\r\n\r\ninterface CastCardProps {\r\n    actor: ICastResults;\r\n}\r\n\r\nconst CastCard: FunctionComponent<CastCardProps> = ({ actor }) => {\r\n    const { url_images } = useAppSelector(state => state.config);\r\n    let imgUrl = actor.profile_path ? url_images + actor.profile_path : Avatar;\r\n\r\n    return (\r\n        <div key={actor.id} className={cls.CastCard}>\r\n            <div className={cls.profileImg}>\r\n                <Img src={imgUrl}/>\r\n            </div>\r\n            <div className={cls.name}>{actor.name}</div>\r\n            <div className={cls.character}>\r\n                {actor.character}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CastCard;\r\n","import { FunctionComponent } from 'react';\r\nimport { ICrewResults } from 'shared/types/typeOfResultRequest/typeOfResultRequest';\r\n\r\ninterface InfoWritersProps {\r\n    writers: Array<ICrewResults>;\r\n}\r\n\r\nconst InfoWriters: FunctionComponent<InfoWritersProps> = ({ writers }) => {\r\n\r\n    return (\r\n        <div className=\"info\">\r\n            <span className=\"text bold\">Writer:{' '}</span>\r\n            <span className=\"text\">\r\n                {writers?.map((w, idx) => (\r\n                    <span key={idx}>{w.name}{writers.length - 1 !== idx && ', '}</span>\r\n                ))}\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InfoWriters;\r\n","import { FunctionComponent } from 'react';\r\nimport { ICrewResults } from 'shared/types/typeOfResultRequest/typeOfResultRequest';\r\n\r\ninterface infoDirectorsProps {\r\n    director: Array<ICrewResults>;\r\n}\r\n\r\nconst infoDirectors: FunctionComponent<infoDirectorsProps> = ({ director }) => {\r\n\r\n    return (\r\n        <div className=\"info\">\r\n            <span className=\"text bold\">Director:{' '}</span>\r\n            <span className=\"text\">\r\n                {director?.map((d, idx) => (\r\n                    <span key={idx}>{d.name}{director.length - 1 !== idx && ', '}</span>\r\n                ))}\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default infoDirectors;\r\n\r\n","export const toHoursAndMinutes = (totalMinutes: number): string => {\r\n    const hours = Math.floor(totalMinutes / 60);\r\n    const minutes = totalMinutes % 60;\r\n    return `${hours}h${minutes > 0 ? ` ${minutes}m` : ''}`;\r\n};\r\n\r\nexport const validGenres = (genres: Array<{\r\n    id: number,\r\n    name: string\r\n}>): number[] => {\r\n    return genres.reduce((res: number[], genre) => res.concat(genre.id), []);\r\n};\r\n","import { FunctionComponent } from 'react';\r\nimport dayjs from 'dayjs';\r\nimport { toHoursAndMinutes } from 'shared/helpers/helpers';\r\nimport '../infoContent.scss';\r\n\r\ninterface InfoReleaseProps {\r\n    status: string;\r\n    release_date: string;\r\n    runtime: number;\r\n}\r\n\r\nconst InfoRelease: FunctionComponent<InfoReleaseProps> = ({ release_date, status, runtime }) => {\r\n\r\n    return (\r\n        <div className=\"info\">\r\n            <div className=\"infoItem\">\r\n                <span className=\"text bold\">Status:{' '}</span>\r\n                <span className=\"text\">{status}</span>\r\n            </div>\r\n\r\n            <div className=\"infoItem\">\r\n                <span className=\"text bold\">Release Date:{' '}</span>\r\n                <span className=\"text\">{dayjs(release_date).format('MMM D, YYYY')}</span>\r\n            </div>\r\n\r\n            <div className=\"infoItem\">\r\n                <span className=\"text bold\">Runtime:{' '}</span>\r\n                <span className=\"text\">{toHoursAndMinutes(runtime)}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InfoRelease;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"overview\":\"OverView_overview__sQ7sL\",\"heading\":\"OverView_heading__HqYnU\",\"description\":\"OverView_description__kb+lS\"};","import { FunctionComponent } from 'react';\r\nimport cls from './OverView.module.scss';\r\n\r\ninterface OverViewProps {\r\n    overview: string;\r\n}\r\n\r\nconst OverView: FunctionComponent<OverViewProps> = ({ overview }) => {\r\n\r\n    return (\r\n        <div className={cls.overview}>\r\n            <div className={cls.heading}>\r\n                Overview\r\n            </div>\r\n            <div className={cls.description}>\r\n                {overview}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OverView;\r\n","import { FunctionComponent } from 'react';\r\n\r\nconst PlayIcon: FunctionComponent = () => {\r\n    return (\r\n        <svg\r\n            version=\"1.1\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            x=\"0px\"\r\n            y=\"0px\"\r\n            width=\"80px\"\r\n            height=\"80px\"\r\n            viewBox=\"0 0 213.7 213.7\"\r\n            enableBackground=\"new 0 0 213.7 213.7\"\r\n            xmlSpace=\"preserve\"\r\n        >\r\n            <polygon\r\n                className=\"triangle\"\r\n                fill=\"none\"\r\n                strokeWidth=\"7\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeMiterlimit=\"10\"\r\n                points=\"73.5,62.5 148.5,105.8 73.5,149.1 \"\r\n            ></polygon>\r\n            <circle\r\n                className=\"circle\"\r\n                fill=\"none\"\r\n                strokeWidth=\"7\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeMiterlimit=\"10\"\r\n                cx=\"106.8\"\r\n                cy=\"106.8\"\r\n                r=\"103.3\"\r\n            ></circle>\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default PlayIcon;\r\n","import { FunctionComponent } from 'react';\r\nimport './WatchTrailer.scss';\r\nimport PlayIcon from 'shared/ui/playIcon/PlayIcon';\r\n\r\ninterface WatchTrailerProps {\r\n    openTrailer: () => void;\r\n}\r\n\r\nconst WatchTrailer: FunctionComponent<WatchTrailerProps> = ({ openTrailer }) => {\r\n\r\n    return (\r\n        <div className=\"playbtn\" onClick={openTrailer}>\r\n            <PlayIcon/>\r\n            <span className=\"text\">Watch Trailer</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WatchTrailer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Titles_title__1f30B\",\"subtitle\":\"Titles_subtitle__hwhSn\"};","import { FunctionComponent } from 'react';\r\nimport dayjs from 'dayjs';\r\nimport cls from './Titles.module.scss';\r\n\r\ninterface TitleProps {\r\n    title: string;\r\n    release_date: string;\r\n    tagline: string;\r\n}\r\n\r\nconst Titles: FunctionComponent<TitleProps> = ({ title, release_date, tagline }) => {\r\n\r\n    return (\r\n        <>\r\n            <div className={cls.title}>\r\n                {`${title} (${dayjs(release_date).format('YYYY')})`}\r\n            </div>\r\n            <div className={cls.subtitle}>\r\n                {tagline}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Titles;\r\n","import { FunctionComponent } from 'react';\r\nimport PosterFallback from 'shared/assets/images/no-poster.png';\r\nimport { useAppSelector } from 'app/providers/storeProviders/utils/hooks';\r\nimport Img from 'shared/ui/Image/Img';\r\n\r\ninterface DetailsBannerProps {\r\n    poster_path: string;\r\n}\r\n\r\nconst DetailsPoster: FunctionComponent<DetailsBannerProps> = ({ poster_path }) => {\r\n    const { url_images } = useAppSelector(state => state.config);\r\n\r\n    return (\r\n        poster_path ? (\r\n            <Img\r\n                className=\"posterImg\"\r\n                src={url_images + poster_path}\r\n            />\r\n        ) : (\r\n            <Img\r\n                className=\"posterImg\"\r\n                src={PosterFallback}\r\n            />\r\n        )\r\n    );\r\n};\r\n\r\nexport default DetailsPoster;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"DetailsBannerSkeleton\":\"DetailsBannerSkeleton_DetailsBannerSkeleton__saD5v\",\"left\":\"DetailsBannerSkeleton_left__Ikrwf\",\"right\":\"DetailsBannerSkeleton_right__Ww3Es\",\"row\":\"DetailsBannerSkeleton_row__dYOBo\"};","import { FunctionComponent } from 'react';\r\nimport cls from './DetailsBannerSkeleton.module.scss';\r\nimport ContentWrapper from 'shared/ui/contentWrapper/ContentWrapper';\r\n\r\nconst DetailsBannerSkeleton: FunctionComponent = () => {\r\n\r\n    return (\r\n        <div className={cls.DetailsBannerSkeleton}>\r\n            <ContentWrapper className=\"ContentWrapperDetailsBanner\">\r\n                <div className={`${cls.left} skeleton`}></div>\r\n                <div className={cls.right}>\r\n                    <div className={`${cls.row} skeleton`}></div>\r\n                    <div className={`${cls.row} skeleton`}></div>\r\n                    <div className={`${cls.row} skeleton`}></div>\r\n                    <div className={`${cls.row} skeleton`}></div>\r\n                    <div className={`${cls.row} skeleton`}></div>\r\n                    <div className={`${cls.row} skeleton`}></div>\r\n                    <div className={`${cls.row} skeleton`}></div>\r\n                </div>\r\n            </ContentWrapper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DetailsBannerSkeleton;\r\n","import { FunctionComponent } from 'react';\r\nimport './DetailsBackdropImg.scss';\r\nimport { useAppSelector } from 'app/providers/storeProviders/utils/hooks';\r\nimport Img from 'shared/ui/Image/Img';\r\n\r\ninterface DetailsBackdropImgProps {\r\n    backdrop_path: string;\r\n}\r\n\r\nconst DetailsBackdropImg: FunctionComponent<DetailsBackdropImgProps> = ({ backdrop_path }) => {\r\n    const { url_images } = useAppSelector(state => state.config);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"backdrop-img\">\r\n                <Img src={url_images + backdrop_path}/>\r\n            </div>\r\n            <div className=\"opacity-layer\"></div>\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default DetailsBackdropImg;\r\n","import { Dispatch, FunctionComponent, SetStateAction } from 'react';\r\nimport './VideoCard.scss';\r\nimport Img from 'shared/ui/Image/Img';\r\nimport PlayIcon from 'shared/ui/playIcon/PlayIcon';\r\nimport { IVideosResults } from 'shared/types/typeOfResultRequest/typeOfResultRequest';\r\n\r\ninterface VideoCardProps {\r\n    video: IVideosResults;\r\n    setShowVideo: Dispatch<SetStateAction<boolean>>;\r\n    setVideoId: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\nconst VideoCard: FunctionComponent<VideoCardProps> = ({ video, setVideoId, setShowVideo }) => {\r\n\r\n    const startVideo = () => {\r\n        setVideoId(video.key);\r\n        setShowVideo(true);\r\n    };\r\n\r\n    return (\r\n        <div className=\"VideoCard\" onClick={startVideo}>\r\n            <div className=\"videoThumbnail\">\r\n                <Img\r\n                    src={`https://img.youtube.com/vi/${video.key}/mqdefault.jpg`}\r\n                />\r\n                <PlayIcon/>\r\n            </div>\r\n            <div className=\"videoTitle\">{video.name}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoCard;\r\n","import { FunctionComponent, useState } from 'react';\r\nimport cls from './Videos.module.scss';\r\nimport ContentWrapper from 'shared/ui/contentWrapper/ContentWrapper';\r\nimport { IVideosResults } from 'shared/types/typeOfResultRequest/typeOfResultRequest';\r\nimport VideosSkeleton from 'entities/contentPage/ui/videos/VideosSkeleton/VideosSkeleton';\r\nimport { VideoPopup } from 'features/videoPopup';\r\nimport { VideoCard } from 'entities/contentPage';\r\nimport { useAppSelector } from 'app/providers/storeProviders/utils/hooks';\r\n\r\ninterface VideosProps {\r\n    videos?: Array<IVideosResults>;\r\n\r\n}\r\n\r\nconst Videos: FunctionComponent<VideosProps> = ({ videos }) => {\r\n    const { isLoading } = useAppSelector(state => state.content);\r\n    const [showVideo, setShowVideo] = useState(false);\r\n    const [videoId, setVideoId] = useState('');\r\n\r\n    if (!videos?.length && isLoading) {\r\n        return <ContentWrapper><VideosSkeleton/></ContentWrapper>;\r\n    }\r\n\r\n    if (!videos?.length) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <div className={cls.Videos}>\r\n            <ContentWrapper>\r\n                <div className={cls.title}>Official Videos</div>\r\n                {(!!videos) && (\r\n                    <div className={cls.videosRow}>\r\n                        {videos?.map((video) =>\r\n                            <VideoCard\r\n                                key={video.id}\r\n                                video={video}\r\n                                setShowVideo={setShowVideo}\r\n                                setVideoId={setVideoId}\r\n                            />)}\r\n                    </div>\r\n                )}\r\n            </ContentWrapper>\r\n            <VideoPopup\r\n                show={showVideo}\r\n                setShow={setShowVideo}\r\n                trailerId={videoId}\r\n                setTrailerId={setVideoId}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Videos;\r\n","import { FunctionComponent, useEffect, useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from 'app/providers/storeProviders/utils/hooks';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchSimilar } from 'entities/contentPage/model/slice/contentPagesSlice';\r\nimport { IRequestResults } from 'shared/types/typeOfResultRequest/typeOfResultRequest';\r\nimport { Carousel } from 'features/carousel';\r\n\r\nconst Similar: FunctionComponent = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { id, mediaType } = useParams();\r\n    const [similar, setSimilar] = useState<Array<IRequestResults>>();\r\n    const { media, isLoadingSimilar } = useAppSelector(state => state.content);\r\n    const title = mediaType === 'tv' ? 'Similar TV Shows' : 'Similar Movies';\r\n\r\n    useEffect(() => {\r\n        if (id && mediaType && !media[id]?.similar && !isLoadingSimilar) {\r\n            dispatch(fetchSimilar({ id, mediaType }));\r\n        }\r\n        if (id && mediaType && media[id]?.similar) {\r\n            setSimilar(media[id].similar!.results);\r\n        }\r\n    }, [media]);\r\n\r\n    return (\r\n        <>{!!similar &&\r\n            <Carousel results={similar} isLoading={isLoadingSimilar} title={title} endpoint={mediaType}/>\r\n        }</>\r\n    );\r\n};\r\n\r\nexport default Similar;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"DetailsBanner\":\"DetailsBanner_DetailsBanner__8iN7v\",\"content\":\"DetailsBanner_content__PGYuq\",\"left\":\"DetailsBanner_left__gyw8c\",\"posterImg\":\"DetailsBanner_posterImg__0ZWh5\",\"right\":\"DetailsBanner_right__r-fhp\",\"title\":\"DetailsBanner_title__9sLAo\",\"genres\":\"DetailsBanner_genres__pnHVp\",\"row\":\"DetailsBanner_row__IzV7e\",\"rating\":\"DetailsBanner_rating__P0S0M\"};","import { FunctionComponent, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport cls from './DetailsBanner.module.scss';\r\nimport { fetchDetails } from 'entities/contentPage/model/slice/contentPagesSlice';\r\nimport { useAppDispatch, useAppSelector } from 'app/providers/storeProviders/utils/hooks';\r\nimport { IDetailsResponse } from 'entities/contentPage/model/types/contentPageType';\r\nimport { validGenres } from 'shared/helpers/helpers';\r\nimport ContentWrapper from 'shared/ui/contentWrapper/ContentWrapper';\r\nimport Genres from 'shared/ui/genres/Genres';\r\nimport CircleRating from 'shared/ui/circleRating/CircleRating';\r\nimport { ICrewResults, IVideosResults } from 'shared/types/typeOfResultRequest/typeOfResultRequest';\r\nimport { VideoPopup } from 'features/videoPopup';\r\nimport {\r\n    DetailsBackdropImg,\r\n    DetailsBannerSkeleton,\r\n    DetailsPoster,\r\n    InfoRelease,\r\n    InfoWriters,\r\n    OverView,\r\n    Titles,\r\n    WatchTrailer,\r\n} from 'entities/contentPage';\r\nimport InfoDirectors from 'entities/contentPage/ui/detailsBanner/InfoDirectors/infoDirectors';\r\n\r\ninterface DetailsBannerProps {\r\n    trailer?: IVideosResults;\r\n    crew: Array<ICrewResults>;\r\n}\r\n\r\nconst DetailsBanner: FunctionComponent<DetailsBannerProps> = ({ trailer, crew }) => {\r\n    const dispatch = useAppDispatch();\r\n    const { mediaType, id } = useParams();\r\n    const [data, setData] = useState<IDetailsResponse>();\r\n    const [show, setShow] = useState(false);\r\n    const [trailerId, setTrailerId] = useState<string>('');\r\n    const director = crew?.filter(pers => pers.job.includes('Director'));\r\n    const writers = crew?.filter(pers => pers.job.includes('Screenplay') || pers.job.includes('Story') || pers.job.includes('Writer'));\r\n    const { media, isLoadingDetails } = useAppSelector(state => state.content);\r\n\r\n    useEffect(() => {\r\n        if (id && mediaType && !media[id]?.details && !isLoadingDetails) {\r\n            dispatch(fetchDetails({ id, mediaType }));\r\n        }\r\n        if (id && mediaType && media[id]?.details) {\r\n            setData(media[id].details);\r\n        }\r\n    }, [dispatch, id, media, mediaType]);\r\n\r\n    const openTrailer = () => {\r\n        setShow(true);\r\n        setTrailerId(trailer!.key);\r\n    };\r\n\r\n    if (!data) {\r\n        return <DetailsBannerSkeleton/>;\r\n    }\r\n\r\n    return (\r\n        <div className={cls.DetailsBanner}>\r\n            {!!data && (\r\n                <>\r\n                    <DetailsBackdropImg backdrop_path={data.backdrop_path}/>\r\n                    <ContentWrapper>\r\n                        <div className={cls.content}>\r\n                            <div className={cls.left}>\r\n                                <DetailsPoster poster_path={data.poster_path}/>\r\n                            </div>\r\n                            <div className={cls.right}>\r\n                                <Titles\r\n                                    title={data.title || data.name}\r\n                                    release_date={data.release_date}\r\n                                    tagline={data.tagline}\r\n                                />\r\n                                <Genres className={cls.genres} genresProps={validGenres(data.genres)}/>\r\n                                <div className={cls.row}>\r\n                                    <CircleRating\r\n                                        className={cls.rating}\r\n                                        textColor=\"white\"\r\n                                        rating={Number(data.vote_average.toFixed(1))}\r\n                                    />\r\n                                    <WatchTrailer openTrailer={openTrailer}/>\r\n                                </div>\r\n                                <OverView overview={data.overview}/>\r\n                                <InfoRelease\r\n                                    status={data.status}\r\n                                    release_date={data.release_date}\r\n                                    runtime={data.runtime}\r\n                                />\r\n                                {!!director && <InfoDirectors director={director}/>}\r\n                                {!!writers && <InfoWriters writers={writers}/>}\r\n                            </div>\r\n                        </div>\r\n                        <VideoPopup\r\n                            show={show}\r\n                            setShow={setShow}\r\n                            trailerId={trailerId}\r\n                            setTrailerId={setTrailerId}\r\n                        />\r\n                    </ContentWrapper>\r\n                </>\r\n            )})\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DetailsBanner;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Cast\":\"Cast_Cast__uwFiJ\",\"title\":\"Cast_title__Vyy03\",\"listItems\":\"Cast_listItems__Ev4ia\"};","import { FunctionComponent } from 'react';\r\nimport cls from './Cast.module.scss';\r\nimport { ICastResults } from 'shared/types/typeOfResultRequest/typeOfResultRequest';\r\nimport ContentWrapper from 'shared/ui/contentWrapper/ContentWrapper';\r\nimport { CartSkeleton, CastCard } from 'entities/contentPage';\r\n\r\ninterface CastProps {\r\n    cast?: Array<ICastResults>;\r\n}\r\n\r\nconst Cast: FunctionComponent<CastProps> = ({ cast }) => {\r\n\r\n    if (!cast?.length) {\r\n        return <ContentWrapper><CartSkeleton/></ContentWrapper>;\r\n    }\r\n\r\n    return (\r\n        <div className={cls.Cast}>\r\n            <ContentWrapper>\r\n                <div className={cls.title}>Top Cast</div>\r\n                {(!!cast) && (\r\n                    <div className={cls.listItems}>\r\n                        {cast?.map((actor) => <CastCard key={actor.id} actor={actor}/>)}\r\n                    </div>\r\n                )}\r\n            </ContentWrapper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cast;\r\n","import { FunctionComponent, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useAppDispatch, useAppSelector } from 'app/providers/storeProviders/utils/hooks';\r\nimport { fetchCredits, fetchVideos } from 'entities/contentPage/model/slice/contentPagesSlice';\r\nimport {\r\n    ICastResults,\r\n    ICrewResults,\r\n    IVideosResults,\r\n} from 'shared/types/typeOfResultRequest/typeOfResultRequest';\r\nimport { Cast, DetailsBanner, Similar, Videos } from 'widgets/contentPage';\r\n\r\nconst ContentPage: FunctionComponent = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { id, mediaType } = useParams();\r\n    const [crew, setCrew] = useState<Array<ICrewResults>>([]);\r\n    const [cast, setCast] = useState<Array<ICastResults>>([]);\r\n    const [videos, setVideos] = useState<Array<IVideosResults>>([]);\r\n    const { media } = useAppSelector(state => state.content);\r\n\r\n    useEffect(() => {\r\n        if (id && mediaType && !media[id]) {\r\n            dispatch(fetchVideos({ mediaType, id }));\r\n            dispatch(fetchCredits({ mediaType, id }));\r\n        }\r\n    }, [dispatch, id, media, mediaType]);\r\n\r\n    useEffect(() => {\r\n        if (id && media[id]?.videos) setVideos(media[id].videos!.results);\r\n        if (id && media[id]?.credits?.cast) setCast(media[id].credits!.cast);\r\n        if (id && media[id]?.credits?.crew) setCrew(media[id].credits!.crew);\r\n    }, [cast, crew, id, media, videos]);\r\n\r\n    return (\r\n        <div>\r\n            <DetailsBanner trailer={videos?.[0]} crew={crew}/>\r\n            <Cast cast={cast}/>\r\n            <Videos videos={videos}/>\r\n            <Similar/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContentPage;\r\n","import { FunctionComponent } from 'react';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport './Img.scss';\r\nimport PosterFallback from 'shared/assets/images/no-poster.png';\r\n\r\ninterface ImgProps {\r\n    src?: string;\r\n    className?: string;\r\n}\r\n\r\nconst Img: FunctionComponent<ImgProps> = ({ src, className = '' }) => {\r\n\r\n    return (\r\n        <LazyLoadImage\r\n            className={className}\r\n            alt=\"\"\r\n            effect=\"blur\"\r\n            placeholderSrc={PosterFallback}\r\n            src={src}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Img;\r\n","import { FunctionComponent } from 'react';\r\nimport './CircleRating.scss';\r\nimport { buildStyles, CircularProgressbar } from 'react-circular-progressbar';\r\n\r\ninterface CircleRatingProps {\r\n    rating: number;\r\n    className?: string;\r\n    textColor?: string;\r\n}\r\n\r\nconst CircleRating: FunctionComponent<CircleRatingProps> = ({ rating, className = '', textColor = '' }) => {\r\n\r\n    return (\r\n        <div className={`${className} CircleRating`}>\r\n            <CircularProgressbar\r\n                value={rating}\r\n                maxValue={10}\r\n                text={String(rating)}\r\n                styles={buildStyles({\r\n                    pathColor: rating < 5 ? 'red' : rating < 7 ? 'orange' : 'green',\r\n                    textColor: textColor ? textColor : '',\r\n                })}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CircleRating;\r\n","import { FunctionComponent } from 'react';\r\nimport './Genres.scss';\r\nimport { useAppSelector } from 'app/providers/storeProviders/utils/hooks';\r\n\r\ninterface GenresProps {\r\n    genresProps: number[];\r\n    className?: string;\r\n}\r\n\r\nconst Genres: FunctionComponent<GenresProps> = ({ genresProps, className = '' }) => {\r\n    const { genres } = useAppSelector(state => state.config);\r\n\r\n    return (\r\n        <div className={`${className} Genres`}>\r\n            {\r\n                genresProps?.map(g => {\r\n                    if (!genres[g]) return;\r\n                    return (\r\n                        <div key={g} className=\"genre\">\r\n                            {genres[g]}\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Genres;\r\n"],"names":["_ref","_item$vote_average","_item$genre_ids","item","posterUrl","endpoint","fullInfo","className","mediaType","navigate","useNavigate","_jsxs","concat","onClick","media_type","id","children","_jsx","Img","src","_Fragment","CircleRating","rating","Number","vote_average","toFixed","Genres","genresProps","genre_ids","slice","title","name","dayjs","release_date","first_air_date","format","changeContentCarousel","BsFillArrowLeftCircleFill","BsFillArrowRightCircleFill","CarouselSkeleton","Skeleton","cls","results","isLoading","carouselContainer","useRef","url","useAppSelector","state","config","url_images","ContentWrapper","Boolean","Arrows","dir","container","current","scrollAmount","scrollLeft","offsetWidth","scrollTo","left","behavior","ref","map","poster_path","PosterFallback","CarouselCard","VideosSkeleton","show","setShow","trailerId","setTrailerId","hidePopup","ReactPlayer","controls","width","height","CartSkeleton","actor","imgUrl","profile_path","Avatar","character","writers","w","idx","length","director","d","toHoursAndMinutes","totalMinutes","hours","Math","floor","minutes","status","runtime","overview","PlayIcon","version","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","fill","strokeWidth","strokeLinecap","strokeLinejoin","strokeMiterlimit","points","cx","cy","r","openTrailer","tagline","DetailsBannerSkeleton","backdrop_path","video","setVideoId","setShowVideo","startVideo","key","videos","content","showVideo","useState","videoId","VideoCard","VideoPopup","Similar","dispatch","useAppDispatch","useParams","similar","setSimilar","media","isLoadingSimilar","useEffect","_media$id","_media$id2","fetchSimilar","Carousel","trailer","crew","data","setData","filter","pers","job","includes","isLoadingDetails","details","fetchDetails","DetailsBackdropImg","DetailsPoster","Titles","genres","reduce","res","genre","textColor","WatchTrailer","OverView","InfoRelease","InfoDirectors","InfoWriters","cast","CastCard","ContentPage","setCrew","setCast","setVideos","fetchVideos","fetchCredits","_media$id2$credits","_media$id3","_media$id3$credits","credits","DetailsBanner","Cast","Videos","LazyLoadImage","alt","effect","placeholderSrc","CircularProgressbar","value","maxValue","text","String","styles","buildStyles","pathColor","g"],"sourceRoot":""}